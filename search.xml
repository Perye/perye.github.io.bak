<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringBoot2.x 单元测试</title>
      <link href="/2019/04/18/hou-duan/spring/springboot2.x-dan-yuan-ce-shi/"/>
      <url>/2019/04/18/hou-duan/spring/springboot2.x-dan-yuan-ce-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一个 bug 被隐藏的时间越长，修复这个 bug 的代价就越大。</p></blockquote><p>我曾经在 <a href="https://blinkfox.github.io/2018/11/15/hou-duan/java/dan-yuan-ce-shi-zhi-nan/" target="_blank" rel="noopener">单元测试指南</a> 一文中写到过单元测试的必要性和 Java 单元测试相关的工具及方法。单元测试能帮助我们在早期就规避、发现和修复很多不易察觉的 bug 和漏洞，而且更能保障后期的需求变动和代码重构时所带来的隐患，减少测试成本和维护成本。在 SpringBoot2.x 集成和写单元测试更加容易了。</p><h2 id="创建-SpringBoot2-x-项目"><a href="#创建-SpringBoot2-x-项目" class="headerlink" title="创建 SpringBoot2.x 项目"></a>创建 SpringBoot2.x 项目</h2><p>在 <a href="https://start.spring.io/" target="_blank" rel="noopener">start.spring.io</a> 中创建一个自己的 SpringBoot2.x 项目，目前版本<code>2.1.3</code>。选出自己需要的一些组件生成项目即可，我这里选了如下几个：</p><ul><li><code>Web</code>: Web项目</li><li><code>JPA</code>: 数据库持久层采用<a href="https://spring.io/guides/gs/accessing-data-jpa/" target="_blank" rel="noopener">Spring Data JPA</a>，方便实用</li><li><code>Lombok</code>: 可以通过注解大量减少Java中重复代码的书写</li><li><code>HSQLDB</code>: 内存数据库，用来对 <code>Repository</code> 层做单元测试</li></ul><p>生成之后可以在 <code>pom.xml</code> 中看到 SpringBoot2.x 项目中已经引入了<code>spring-boot-starter-test</code>这个启动组件，包含了几乎绝大多数测试场景需要的组件。然后通过<code>mvn clean install</code>来构建本项目或者直接导入 IDE 开发工具即可。</p><p>下面将以对博客信息做简单修改和查询为示例来说明在 Spring Boot 中如何分别对 <code>DAO</code>，<code>Service</code>，<code>Controller</code> 做单元测试。</p><h2 id="DAO-层的单元测试"><a href="#DAO-层的单元测试" class="headerlink" title="DAO 层的单元测试"></a>DAO 层的单元测试</h2><h3 id="新建数据库脚本"><a href="#新建数据库脚本" class="headerlink" title="新建数据库脚本"></a>新建数据库脚本</h3><p>DAO 层的测试我这里采用的是 <code>HSQLDB</code> 的内存数据库，最好准备一些初始化的数据表结构和脚本，当然也可用直接通过官方示例的 <code>JPA</code>特性和 API 代码来初始化数据。这里我还是通过脚本的方式来做，便于统一管理和维护表结构和数据。</p><p>在 <code>src/test</code> 目录下新建 <code>resources</code> 资源目录，并在 <code>resources</code> 目录下新建 <code>db</code> 目录，在 <code>db</code> 目录下分别，新建用于管理的表结构文件(<code>schema.sql</code>)和初始化数据文件(<code>data.sql</code>)的 SQL 脚本。</p><p><code>schema.sql</code> 文件中的内容如下：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建数据库表所在的模式 schema.</span><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> test<span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 在 test 模式下创建数据库表.</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> test<span class="token punctuation">.</span>t_test_blog<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> test<span class="token punctuation">.</span>t_test_blog <span class="token punctuation">(</span>    c_id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    c_author <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    c_content <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dt_publish_time <span class="token keyword">timestamp</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    c_title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    c_url <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    n_status <span class="token keyword">int</span><span class="token punctuation">,</span>    c_create_user <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dt_create_time <span class="token keyword">timestamp</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    dt_update_time <span class="token keyword">timestamp</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> pk_test_blog <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>c_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">commit</span><span class="token punctuation">;</span></code></pre><p><code>data.sql</code> 文件中的内容如下：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 初始化插入一些博客信息数据.</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> test<span class="token punctuation">.</span>t_test_blog <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'这是内容'</span><span class="token punctuation">,</span> <span class="token string">'2019-03-01 00:41:01'</span><span class="token punctuation">,</span> <span class="token string">'Spring从入门到精通'</span><span class="token punctuation">,</span> 'https:<span class="token comment" spellcheck="true">//baidu.com', '1', 'tom', '2019-03-01 00:41:33', '2019-03-01 00:41:36');</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> test<span class="token punctuation">.</span>t_test_blog <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'这是Mybatis的内容'</span><span class="token punctuation">,</span> <span class="token string">'2019-03-01 00:41:01'</span><span class="token punctuation">,</span> <span class="token string">'Mybatis基础'</span><span class="token punctuation">,</span> 'https:<span class="token comment" spellcheck="true">//qq.com', '2', 'jack', '2019-03-01 00:41:33', '2019-03-01 00:41:36');</span><span class="token keyword">commit</span><span class="token punctuation">;</span></code></pre><h3 id="增加-yaml-配置文件及内容"><a href="#增加-yaml-配置文件及内容" class="headerlink" title="增加 yaml 配置文件及内容"></a>增加 yaml 配置文件及内容</h3><p>在 <code>resources</code> 目录下新建 <code>application-hsqldb.yml</code> 配置文件，用于存放 HSQLDB 及 JPA 相关的配置信息，主要配置内容如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>hsqldb<span class="token punctuation">:</span>mem<span class="token punctuation">:</span>db_test <span class="token comment" spellcheck="true"># 以内存数据库的方式来运行.</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.hsqldb.jdbc.JDBCDriver    <span class="token key atrule">platform</span><span class="token punctuation">:</span> hsqldb    <span class="token key atrule">schema</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>db/schema.sql    <span class="token key atrule">data</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>db/data.sql  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>    <span class="token key atrule">show-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>      <span class="token key atrule">ddl-auto</span><span class="token punctuation">:</span> none <span class="token comment" spellcheck="true"># 这里没用 JPA 的自动生成表结构等功能，你可以视自己的具体情况来开启.</span>    <span class="token key atrule">generate-ddl</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 启动时是否初始化数据库.</span></code></pre><h3 id="准备实体-POJO-和-DAO-层-Repository-类"><a href="#准备实体-POJO-和-DAO-层-Repository-类" class="headerlink" title="准备实体 POJO 和 DAO 层 Repository 类"></a>准备实体 POJO 和 DAO 层 Repository 类</h3><p>博客信息的实体 POJO 类如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Getter<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Setter<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span>Accessors<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 博客实体. * * @author blinkfox on 2019-2-26. */</span><span class="token annotation punctuation">@Getter</span><span class="token annotation punctuation">@Setter</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"t_test_blog"</span><span class="token punctuation">,</span> schema <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blog</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * ID.     */</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 作者.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_author"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String author<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 标题.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_title"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String title<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 内容.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_content"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 发布时间.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"dt_publish_time"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date publishTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 链接地址.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_url"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String url<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 状态.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"n_status"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer status<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建用户.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"c_create_user"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String createUser<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建时间.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"dt_create_time"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 最后更新时间.     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"dt_update_time"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>下面是 <code>BlogRepository</code> 中的一个简单的自定义 <code>@Query</code> 查询，当然你也可以采用名称的规则来写本查询，我这里为了做示例，使用了 <code>@Query</code> 查询。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Blog<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogRepository. * * @author blinkfox on 2019-02-27. */</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BlogRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Blog<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"SELECT b FROM Blog AS b WHERE b.title like 'Spring%'"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Blog<span class="token operator">></span> <span class="token function">querySpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="BlogRepository-的单元测试"><a href="#BlogRepository-的单元测试" class="headerlink" title="BlogRepository 的单元测试"></a>BlogRepository 的单元测试</h3><p>然后在 Intellij IDEA 中通过 <code>Ctrl + Shift + T</code> 来为 <code>BlogRepository</code> 生成它对应的单元测试类 <code>BlogRepositoryTest</code>。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Blog<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Optional<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>DataJpaTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ActiveProfiles<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogRepositoryTest. * * @author blinkfox on 2019-03-01. */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">"hsqldb"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DataJpaTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogRepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> BlogRepository blogRepository<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试新增博客的情况.     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        String id <span class="token operator">=</span> <span class="token string">"newblogId"</span><span class="token punctuation">;</span>        String title <span class="token operator">=</span> <span class="token string">"Java 从入门到放弃"</span><span class="token punctuation">;</span>        blogRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Optional<span class="token operator">&lt;</span>Blog<span class="token operator">></span> blogOptional <span class="token operator">=</span> blogRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>blogOptional<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> title<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>blogOptional<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试查询所有 Spring 相关的博客信息.     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">querySpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Blog<span class="token operator">></span> blogs <span class="token operator">=</span> blogRepository<span class="token punctuation">.</span><span class="token function">querySpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> blogs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"Spring从入门到精通"</span><span class="token punctuation">,</span> blogs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这样就完成了 DAO 层代码的测试，以上程序主要依托于内存数据库 HSQLDB 和 Spring Data JPA。</p><h2 id="Service-层的单元测试"><a href="#Service-层的单元测试" class="headerlink" title="Service 层的单元测试"></a>Service 层的单元测试</h2><p>实际开发过程中，Service 层中的类依赖了 DAO 层中的类或其他 Service 类。为了隔离对其他 Service 类或 DAO 层中的类的依赖，只测试本 Service 类中的方法逻辑，就需要 Mock 数据和做打桩等操作。Spring Boot 中原生集成了 <a href="https://site.mockito.org/" target="_blank" rel="noopener">Mockito</a>，可以非常方便我们对 Java 代码做单元测试。</p><h3 id="新建-BlogService-类"><a href="#新建-BlogService-类" class="headerlink" title="新建 BlogService 类"></a>新建 BlogService 类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Blog<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>BlogRepository<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Optional<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogService. * * @author blinkfox on 2019-03-01. */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> BlogRepository blogRepository<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 查询所有 Spring 相关的博客信息.     *     * @return 博客信息     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Blog<span class="token operator">></span> <span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"进入了获取 Spring 相关博客的 Service 方法."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> blogRepository<span class="token punctuation">.</span><span class="token function">querySpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据博客ID来修改该博客的名称.     *     * @param id 博客ID     * @param title 博客标题     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyTitileById</span><span class="token punctuation">(</span>String id<span class="token punctuation">,</span> String title<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Optional<span class="token operator">&lt;</span>Blog<span class="token operator">></span> blogOptional <span class="token operator">=</span> blogRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>blogOptional<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"需要修改名称的博客不存在，id为【{}】请检查！"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        blogRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>blogOptional<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="BlogService-的单元测试"><a href="#BlogService-的单元测试" class="headerlink" title="BlogService 的单元测试"></a>BlogService 的单元测试</h3><p>通过 <code>BlogService</code> 可以生成和书写出其对应的单元测试类和测试方法，代码如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Blog<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>BlogRepository<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Optional<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>InjectMocks<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>Mock<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>Mockito<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>MockitoJUnitRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogServiceTest. * * @author blinkfox on 2019-03-01. */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>MockitoJUnitRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Mock</span>    <span class="token keyword">private</span> BlogRepository blogRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@InjectMocks</span>    <span class="token keyword">private</span> BlogService blogService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试service层中获取Spring相关博客的方法.     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 构造需要返回的博客信息集合数据.</span>        Blog blog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Spring Action"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Blog<span class="token operator">></span> blogList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        blogList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>        Mockito<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">.</span><span class="token function">querySpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>blogList<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Blog<span class="token operator">></span> blogs <span class="token operator">=</span> blogService<span class="token punctuation">.</span><span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 断言验证查询到的数据.</span>        Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> blogs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Assert<span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">"Spring Action"</span><span class="token punctuation">,</span> blog<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试根据博客ID来修改该博客的名称成功时的情况.     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyTitileById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Mock 相关数据和类方法的行为.</span>        String id <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">;</span>        Mockito<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>Optional<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Mockito<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Mockito<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        blogService<span class="token punctuation">.</span><span class="token function">modifyTitileById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token string">"算法导论"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 验证 blogRepository.save(s) 方法被调用过一次.</span>        Mockito<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Mockito<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试根据博客ID来修改该博客的名称失败时的情况.     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyTitileByIdWithFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Mock 未根据 ID 找到对应的博客信息的情况.</span>        String id <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">;</span>        Mockito<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        blogService<span class="token punctuation">.</span><span class="token function">modifyTitileById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token string">"算法导论"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 验证 blogRepository.save(s) 方法并没有被调用过.</span>        Mockito<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>blogRepository<span class="token punctuation">,</span> Mockito<span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Mockito<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p><strong>注意</strong>：这里的 <code>@RunWith</code> 采用的是 Mocktio 提供的 <code>MockitoJUnitRunner</code>。</p></blockquote><p>这样就完成了 Service 层的单元测试，也是我们业务开发中需要重点关注和测试业务逻辑的一层。</p><h2 id="Controller-层的单元测试"><a href="#Controller-层的单元测试" class="headerlink" title="Controller 层的单元测试"></a>Controller 层的单元测试</h2><p>Controller 层测试的重点是测试接口是否能正常工作。可以用到 Spring Boot 中提供的 <code>@WebMvcTest</code> 注解来模拟 Web 层的单元测试。当然，也需要通过 Mock 的方式类隔离对 Service 层各个类的依赖影响。</p><h3 id="新建-BlogController-类"><a href="#新建-BlogController-类" class="headerlink" title="新建 BlogController 类"></a>新建 BlogController 类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Blog<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>service<span class="token punctuation">.</span>BlogService<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpStatus<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>ResponseEntity<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PatchMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogController. * * @author blinkfox on 2019-02-28. */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/blogs"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> BlogService blogService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取所有 Spring 相关的博客信息.     *     * @return Spring相关的博客信息     */</span>    <span class="token annotation punctuation">@GetMapping</span>    <span class="token keyword">public</span> ResponseEntity<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Blog<span class="token operator">>></span> <span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> ResponseEntity<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>blogService<span class="token punctuation">.</span><span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据博客ID修改博客名称.     *     * @param id 博客ID     * @param title 博客标题     * @return 空     */</span>    <span class="token annotation punctuation">@PatchMapping</span><span class="token punctuation">(</span><span class="token string">"/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResponseEntity<span class="token operator">&lt;</span>Void<span class="token operator">></span> <span class="token function">modifyTitileById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> String id<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span> String title<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            blogService<span class="token punctuation">.</span><span class="token function">modifyTitileById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"修改博客名称成功."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>HttpStatus<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"修改博客名称出错，id为【{}】."</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>HttpStatus<span class="token punctuation">.</span>INTERNAL_SERVER_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="BlogController-的单元测试"><a href="#BlogController-的单元测试" class="headerlink" title="BlogController 的单元测试"></a>BlogController 的单元测试</h3><p>通过 <code>BlogController</code> 可以生成和书写出其对应的单元测试类和测试方法，代码如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>request<span class="token punctuation">.</span>MockMvcRequestBuilders<span class="token punctuation">.</span>get<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>request<span class="token punctuation">.</span>MockMvcRequestBuilders<span class="token punctuation">.</span>patch<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>result<span class="token punctuation">.</span>MockMvcResultMatchers<span class="token punctuation">.</span>status<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>blinkfox<span class="token punctuation">.</span>springbootsample<span class="token punctuation">.</span>service<span class="token punctuation">.</span>BlogService<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>Mockito<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>WebMvcTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>mockito<span class="token punctuation">.</span>MockBean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>MockMvc<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * BlogControllerTest. * * @author blinkfox on 2019-03-02. */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@WebMvcTest</span><span class="token punctuation">(</span>BlogController<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogControllerTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> MockMvc mockMvc<span class="token punctuation">;</span>    <span class="token annotation punctuation">@MockBean</span>    <span class="token keyword">private</span> BlogService blogService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试获取所有 Spring 相关的博客信息.     *     * @throws Exception 异常     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        Mockito<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogService<span class="token punctuation">.</span><span class="token function">getSpringBlogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/blogs"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试修改博客标题成功时的情况.     *     * @throws Exception 异常     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyTitileById</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        Mockito<span class="token punctuation">.</span><span class="token function">doNothing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modifyTitileById</span><span class="token punctuation">(</span>Mockito<span class="token punctuation">.</span><span class="token function">anyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Mockito<span class="token punctuation">.</span><span class="token function">anyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">"/blogs/1?title=Spring实战"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试修改博客标题失败时的情况.     *     * @throws Exception 异常     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modifyTitileByIdWithException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        Mockito<span class="token punctuation">.</span><span class="token function">doThrow</span><span class="token punctuation">(</span>RuntimeException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>blogService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modifyTitileById</span><span class="token punctuation">(</span>Mockito<span class="token punctuation">.</span><span class="token function">anyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Mockito<span class="token punctuation">.</span><span class="token function">anyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">"/blogs/1?title=Spring实战"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is5xxServerError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>以上就完成了对 Controller 层的单元测试。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在 Spring Boot 中做单元测试的将会非常容易。上面只是 Spring Boot 中提供的部分方式，<a href="https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/#boot-features-testing" target="_blank" rel="noopener">Spring Boot 文档</a> 中还有其他更多的测试场景和测试方法供你去参考和使用。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单元测试 </tag>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/18/hello-world/"/>
      <url>/2019/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个极简的 Java ASCII 表格生成库</title>
      <link href="/2019/01/25/hou-duan/java/commons/yi-ge-ji-jian-de-java-ascii-biao-ge-sheng-cheng-ku/"/>
      <url>/2019/01/25/hou-duan/java/commons/yi-ge-ji-jian-de-java-ascii-biao-ge-sheng-cheng-ku/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一个轻量级、零依赖的 Java ASCII 表格生成库。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>轻量级、无依赖（jar包仅<code>9kb</code>）</li><li>API简单易用</li><li>易于集成或定制修改，仅一个<a href="https://github.com/blinkfox/mini-table/blob/master/src/main/java/com/blinkfox/minitable/MiniTable.java" target="_blank" rel="noopener">Java</a>文件，且代码规范</li></ul><h2 id="集成使用"><a href="#集成使用" class="headerlink" title="集成使用"></a>集成使用</h2><h3 id="Maven集成"><a href="#Maven集成" class="headerlink" title="Maven集成"></a>Maven集成</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.blinkfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mini-table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="API-使用"><a href="#API-使用" class="headerlink" title="API 使用"></a>API 使用</h3><h4 id="示例1（无标题）"><a href="#示例1（无标题）" class="headerlink" title="示例1（无标题）"></a>示例1（无标题）</h4><pre class=" language-java"><code class="language-java">String table <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MiniTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addHeaders</span><span class="token punctuation">(</span><span class="token string">"header1"</span><span class="token punctuation">,</span> <span class="token string">"header2"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addDatas</span><span class="token punctuation">(</span><span class="token string">"col11"</span><span class="token punctuation">,</span> <span class="token string">"col12"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addDatas</span><span class="token punctuation">(</span><span class="token string">"col21"</span><span class="token punctuation">,</span> <span class="token string">"col22"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>输出结果:</p><pre class=" language-bash"><code class="language-bash">+---------+---------+<span class="token operator">|</span> header1 <span class="token operator">|</span> header2 <span class="token operator">|</span>+---------+---------+<span class="token operator">|</span>  col11  <span class="token operator">|</span>  col12  <span class="token operator">|</span><span class="token operator">|</span>  col21  <span class="token operator">|</span>  col22  <span class="token operator">|</span>+---------+---------+</code></pre><h4 id="示例2（有标题）"><a href="#示例2（有标题）" class="headerlink" title="示例2（有标题）"></a>示例2（有标题）</h4><pre class=" language-java"><code class="language-java">String table <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MiniTable</span><span class="token punctuation">(</span><span class="token string">"The Title"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addHeaders</span><span class="token punctuation">(</span><span class="token string">"Name"</span><span class="token punctuation">,</span> <span class="token string">"Sex"</span><span class="token punctuation">,</span> <span class="token string">"Age"</span><span class="token punctuation">,</span> <span class="token string">"Email"</span><span class="token punctuation">,</span> <span class="token string">"Phone"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addDatas</span><span class="token punctuation">(</span><span class="token string">"LiLei"</span><span class="token punctuation">,</span> <span class="token string">"male"</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">"lilei@gmail.com"</span><span class="token punctuation">,</span> <span class="token string">"13809345219"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addDatas</span><span class="token punctuation">(</span><span class="token string">"hanMeiMei"</span><span class="token punctuation">,</span> <span class="token string">"female"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"hmm@163.com"</span><span class="token punctuation">,</span> <span class="token string">"13515343853"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">addDatas</span><span class="token punctuation">(</span><span class="token string">"ZhangSan"</span><span class="token punctuation">,</span> <span class="token string">"female"</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">"zhangsan@gmail.com"</span><span class="token punctuation">,</span> <span class="token string">"13920199836"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>输出结果:</p><pre class=" language-bash"><code class="language-bash">+-------------------------------------------------------------+<span class="token operator">|</span>                          The Title                          <span class="token operator">|</span>+-----------+--------+-----+--------------------+-------------+<span class="token operator">|</span>   Name    <span class="token operator">|</span>  Sex   <span class="token operator">|</span> Age <span class="token operator">|</span>       Email        <span class="token operator">|</span>    Phone    <span class="token operator">|</span>+-----------+--------+-----+--------------------+-------------+<span class="token operator">|</span>   LiLei   <span class="token operator">|</span>  male  <span class="token operator">|</span> 25  <span class="token operator">|</span>  lilei@gmail.com   <span class="token operator">|</span> 13809345219 <span class="token operator">|</span><span class="token operator">|</span> hanMeiMei <span class="token operator">|</span> female <span class="token operator">|</span> 23  <span class="token operator">|</span>    hmm@163.com     <span class="token operator">|</span> 13515343853 <span class="token operator">|</span><span class="token operator">|</span> ZhangSan  <span class="token operator">|</span> female <span class="token operator">|</span> 32  <span class="token operator">|</span> zhangsan@gmail.com <span class="token operator">|</span> 13920199836 <span class="token operator">|</span>+-----------+--------+-----+--------------------+-------------+</code></pre><h2 id="许可证"><a href="#许可证" class="headerlink" title="许可证"></a>许可证</h2><p>本 <a href="https://github.com/blinkfox/mini-table" target="_blank" rel="noopener">mini-table</a> 类库遵守 <a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener">Apache License 2.0</a> 许可证。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
